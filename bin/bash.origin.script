#!/usr/bin/env bash
# Source https://github.com/bash-origin/bash.origin

BO_READ_SELF_BASH_SOURCE="$""{BASH_SOURCE[0]:-$""0}"
eval BO_SELF_BASH_SOURCE="$BO_READ_SELF_BASH_SOURCE"
function BO_setResult {
		local  __resultvar=$1
    eval $__resultvar="'$2'"
		return 0
}
function BO_deriveSelfDir {
		# @source http://stackoverflow.com/a/246128/330439
		local SOURCE="$2"
		local DIR=""
		while [ -h "$SOURCE" ]; do
			  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
			  SOURCE="$(readlink "$SOURCE")"
			  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
		done
		BO_setResult $1 "$( cd -P "$( dirname "$SOURCE" )" && pwd )"
		return 0
}
BO_deriveSelfDir __BO_DIR__ "$BO_SELF_BASH_SOURCE"

[ -z "$BO_VERBOSE" ] || echo "[bash.origin][bin/bash.origin.script] ls -al ${HOME}/.bash.origin: $(ls -al ${HOME}/.bash.origin)"
[ -z "$BO_VERBOSE" ] || echo "[bash.origin][bin/bash.origin.script] __BO_DIR__: $__BO_DIR__"

[ -z "$BO_VERBOSE" ] || echo "[bash.origin][bin/bash.origin.script] BO_ROOT_SCRIPT_PATH: $BO_ROOT_SCRIPT_PATH"

if [ "$BO_ROOT_SCRIPT_PATH" != "" ]; then

	if [ ! -e "$BO_ROOT_SCRIPT_PATH" ]; then
		# Check if the path points to a local dependency which may not exist.
		if [[ "$BO_ROOT_SCRIPT_PATH" == *"/node_modules/bash.origin/bash.origin" ]]; then
			if [ -e "$__BO_DIR__/../bash.origin" ]; then
				BO_ROOT_SCRIPT_PATH="$(dirname "$__BO_DIR__")/bash.origin"
			elif [ -e "${HOME}/.bash.origin" ]; then
				$BO_ROOT_SCRIPT_PATH="${HOME}/.bash.origin"
			fi
		fi
	fi

	[ -z "$BO_VERBOSE" ] || echo "[bash.origin][bin/bash.origin.script] BO_ROOT_SCRIPT_PATH: $BO_ROOT_SCRIPT_PATH"

	if [ -e "$BO_ROOT_SCRIPT_PATH/../bin/bash.origin" ]; then
		local ORIGINAL_BO_ROOT_SCRIPT_DIR
		BO_deriveSelfDir ORIGINAL_BO_ROOT_SCRIPT_DIR "$BO_ROOT_SCRIPT_PATH"
		if [ "$BO_DIR" != "$ORIGINAL_BO_ROOT_SCRIPT_DIR" ]; then
			[ -z "$BO_VERBOSE" ] || echo "[bash.origin] Delegate to BO_ROOT_SCRIPT_PATH: $BO_ROOT_SCRIPT_PATH"
			# Delegate to the Bash.Origin script at 'BO_ROOT_SCRIPT_PATH'
			# which was set before calling us.
			. "$BO_ROOT_SCRIPT_PATH/../bin/bash.origin"
			return;
		fi
	fi
else
	export BO_ROOT_SCRIPT_PATH="${__BO_DIR__}/../bash.origin"
fi


[ -z "$BO_VERBOSE" ] || echo "[bash.origin][bin/bash.origin.script] BO_ROOT_SCRIPT_PATH: $BO_ROOT_SCRIPT_PATH"

. "$BO_ROOT_SCRIPT_PATH"

[ -z "$BO_VERBOSE" ] || echo "[bash.origin][bin/bash.origin.script] BO_ROOT_SCRIPT_PATH: $BO_ROOT_SCRIPT_PATH"


function function_exists {
	declare -f -F $1 > /dev/null
	return $?
}
#function boEnvironmentNotLoaded {
#	echo "[bash.origin][bin/bash.origin.script] ERROR: The BO_* functions do not seem to be available. Make sure to set BO_LOADED=0 before calling/sourcing this script!"
#	exit 1
#}

if function_exists "BO_resetLoaded"; then
	BO_resetLoaded
fi

. $BO_ROOT_SCRIPT_PATH BOS "$@"
