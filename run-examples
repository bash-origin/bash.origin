#!/bin/bash
if [ ! -f "$HOME/.bash.origin" ]; then
	# TODO: Alternatively use `wget`
	curl "https://raw.githubusercontent.com/bash-origin/bash.origin/master/bash.origin?t=$(date +%s)" | BO="install" sh
fi
# Source https://github.com/cadorn/bash.origin
. "$HOME/.bash.origin"
function init {
	eval BO_SELF_BASH_SOURCE="$BO_READ_SELF_BASH_SOURCE"
	BO_deriveSelfDir ___TMP___ "$BO_SELF_BASH_SOURCE"
	local __BO_DIR__="$___TMP___"

	function format {
		if [ "$1" != "1" ]; then
			return;
		fi
		if [ "$2" == "HEADER" ]; then
			echo "##################################################";
			echo "# $3";
			echo "##################################################";
		fi
		if [ "$2" == "FOOTER" ]; then
			echo "##################################################";
			echo ""
		fi
	}

	function install {
		BO_checkVerbose "VERBOSE" "$@"
		format "$VERBOSE" "HEADER" "Installing latest 'bash.origin'"
		pushd "$__BO_DIR__" > /dev/null
			# Use OUR Bash.Origin script from now on (even to handle the install if the previously
			# installed version supports delegation).
			export BO_ROOT_SCRIPT_PATH="$__BO_DIR__/bash.origin"
			"$BO_ROOT_SCRIPT_PATH" BO install $@
			. "$BO_ROOT_SCRIPT_PATH"
		popd > /dev/null
		format "$VERBOSE" "FOOTER"
	}

	function run {
		BO_checkVerbose "VERBOSE" ${*:2}
		format "$VERBOSE" "HEADER" "$1"
		export BO_PACKAGES_DIR="$__BO_DIR__/.deps"
		export BO_SYSTEM_CACHE_DIR="$BO_PACKAGES_DIR"
		"$__BO_DIR__/examples/$1/main" ${*:2}
		format "$VERBOSE" "FOOTER"
	}

	install $@

	run "01-HelloWorld" $@
	run "02-SourceMultiplePrototypes" $@
	run "03-CliPlugin" $@
	run "04-ProvisionWithSMI" $@
	run "05-DownloadToSystemCache" $@
	run "06-ModifyPromptWithPlugin" $@
}
init $@